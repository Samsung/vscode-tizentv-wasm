{
	"name": "tizentvwasm",
	"displayName": "Tizen TV WASM",
	"description": "'Tizen TV WASM' is a lightweight dispatch of Tizen Studio, which provides extensible IDE to develop/debug tizen apps in vs code.",
	"icon": "images/icon.png",
	"version": "1.1.0",
	"publisher": "TizenTVWeb",
	"repository": {
		"type": "git",
		"url": "https://github.com/Samsung/vscode-tizentv-wasm"
	},
	"engines": {
		"vscode": "^1.0.0"
	},
	"categories": [
		"Debuggers",
		"Snippets",
		"Other"
	],
	"activationEvents": [
		"onCommand:tizentvwasm.createProject",
		"onCommand:tizentvwasm.buildPackage",
		"onCommand:tizentvwasm.launchApplication",
		"onCommand:tizentvwasm.debugApplication",
		"onCommand:tizentvwasm.certificateManager",
		"onCommand:tizentvwasm.witsStart",
		"onCommand:tizentvwasm.witsWatch",
		"onCommand:tizentvwasm.witsStop",
		"onCommand:tizentvwasm.excludeFiles",
		"onCommand:tizentvwasm.addWasmModule",
		"onCommand:tizentvwasm.buildWasmModule"
	],
	"main": "./extension",
	"contributes": {
		"commands": [
			{
				"command": "tizentvwasm.createProject",
				"title": "Tizen TV WASM: Create Web Project"
			},
			{
				"command": "tizentvwasm.buildPackage",
				"title": "Tizen TV WASM: Build Signed Package"
			},
			{
				"command": "tizentvwasm.launchApplication",
				"title": "Tizen TV WASM: Launch Application"
			},
			{
				"command": "tizentvwasm.debugApplication",
				"title": "Tizen TV WASM: Debug Application"
			},
			{
				"command": "tizentvwasm.certificateManager",
				"title": "Tizen TV WASM: Run Certificate Manager"
			},
			{
				"command": "tizentvwasm.witsStart",
				"title": "Tizen TV WASM: Wits Start (Install and Live reload)"
			},
			{
				"command": "tizentvwasm.witsWatch",
				"title": "Tizen TV WASM: Wits Watch (Live reload)"
			},
			{
				"command": "tizentvwasm.witsStop",
				"title": "Tizen TV WASM: Wits Stop"
			},
			{
				"command": "tizentvwasm.excludeFiles",
				"title": "Tizen TV WASM: Excluding files"
			},
			{
				"command": "tizentvwasm.addWasmModule",
				"title": "Tizen TV WASM: Add Wasm Module"
			},
			{
				"command": "tizentvwasm.buildWasmModule",
				"title": "Tizen TV WASM: Build Wasm Module"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "tizentvwasm.excludeFiles",
					"when": "explorerViewletFocus"
				}
			],
			"commandPalette": [
				{
					"command": "tizentvwasm.excludeFiles",
					"when": "false"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "TizenTV SDK Configuration",
			"properties": {
				"tizentv.targetDeviceAddress": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "Set the TV IP to connect, default remote port is 26101."
				},
				"tizentv.hostPCAddress": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "Set the TV IP to connect, default remote port is 26101."
				},
				"tizentv.simulatorExecutable": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "Set the location of simulator-executable, eg: c:\\\\tizen-studio\\\\tools\\\\sec-tv-simulator(win) or /home/tizen-studio/sec-tv-simulator(linux/macOS)."
				},
				"tizentv.chromeExecutable": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "Set the location of chrome-executable, eg: C:\\\\Program Files\\\\Chrome\\\\chrome.exe (win) or /opt/google/chrome/google-chrome(linux/macOS)."
				},
				"tizentv.excludeFiles": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"scope": "workspace",
					"description": "Set the files or folder which are excluded in widget package, eg: C:\\\\workspace\\\\projectName\\\\ignoreFile1.txt, C:\\\\workspace\\\\projectName\\\\ignoreFile2"
				},
				"tizentv.emscriptenCCompiler" : {
					"type" :"array",
					"default" : [],
					"description": "Set additional compilation options for C wasm module, eg: ['-O0', '-g4']"
				},
				"tizentv.emscriptenCPPCompiler" : {
					"type":"array",
					"default":[],
					"description": "Set additional compilation options for C++ wasm module, eg: ['-O0', '-g4']"
				},
				"tizentv.emscriptenLinker" : {
					"type" : "array",
					"default" : [],
					"description": "Set additional linker options for  wasm module, eg: ['-s WASM=1', '-s USE_SDL=2']"
				}
			}
		}
	},
	"scripts": {
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"vscode": "^1.0.0"
	},
	"dependencies": {
		"@tizentv/wits": "^2.4.5",
		"@tizentv/webide-common-tizentv": "^1.0.10",
		"archiver": "3.1.1",
		"async": "^2.0.1",
		"download": "^8.0.0",
		"decompress": "^4.2.1",
		"node-forge": "0.10.0",
		"q": "^1.4.1",
		"xml-crypto": "1.5.3",
		"xml2js": "0.4.23",
		"xmldom": "0.1.27"
	}
}
